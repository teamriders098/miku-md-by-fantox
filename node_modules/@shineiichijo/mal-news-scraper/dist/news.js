"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.scrapNews = void 0;
const cheerio_1 = __importDefault(require("cheerio"));
const axios_1 = __importDefault(require("axios"));
/**
 * Scraps news from the given URL or ID of the news from MyAnimeList
 * @param {number | string} query The URL or ID of the news
 * @returns {Promise<INews>} The contents of the news page
 * @example
 * const query = 66853767 // 'https://myanimelist.net/news/66853767'
 * scrapNews(query)
 */
const scrapNews = (query) => __awaiter(void 0, void 0, void 0, function* () {
    if (!query)
        throw new TypeError(`'query' parameter shouldn't be undefined`);
    const url = typeof query === 'string' && query.includes('myanimelist.net/news/')
        ? `https://myanimelist.net/news/${query.split('/')[query.split('/').length - 1]}`
        : `https://myanimelist.net/news/${query}`;
    return yield axios_1.default
        .get(url)
        .then(({ data }) => {
        const $ = cheerio_1.default.load(data);
        const title = $('#content > div.content-left > div > div:nth-child(2) > div > h1 > a').text();
        const id = url.split('/')[url.split('/').length - 1];
        const image = $('#content > div.content-left > div > div:nth-child(2) > div > div.content.clearfix')
            .find('img')
            .attr('src') || 'https://i.imgur.com/Q8af0QU.jpg';
        const description = $('#content > div.content-left > div > div:nth-child(2) > div > div.content.clearfix')
            .text()
            .replace('\n    \n', '')
            .trim();
        return {
            id,
            url,
            image,
            description,
            title
        };
    })
        .catch((err) => {
        throw new Error(err.message);
    });
});
exports.scrapNews = scrapNews;
